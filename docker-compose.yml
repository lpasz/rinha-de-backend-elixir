version: '3.5'
# 1.5 CPUs e 3.0GB
services:
  app1: &app
    build: .
    hostname: app1
    environment:
      PORT: 8080
      POOL_SIZE: 100
      DATABASE_URL: postgres://clo_user:clo_password@postgres:5432/clo_db
      SECRET_KEY_BASE: wVRDuUih68FigY0GPlnUsI+rNmliAA3P2gkCWt+AL/E+7adDCMEAlxPEizqHfMSG
    expose:
      - 8080
    depends_on:
      postgres:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    healthcheck:
      test: curl -o /dev/null -s --retry 0 http://localhost:8080/ || exit 1
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '0.6GB'
  app2:
    <<: *app
    hostname: app2
    environment:
      PORT: 8081
      POOL_SIZE: 100
      DATABASE_URL: postgres://clo_user:clo_password@postgres:5432/clo_db
      SECRET_KEY_BASE: wVRDuUih68FigY0GPlnUsI+rNmliAA3P2gkCWt+AL/E+7adDCMEAlxPEizqHfMSG
    expose:
      - 8081
    healthcheck:
      test: curl -o /dev/null -s --retry 0 http://localhost:8081/ || exit 1
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 5s

  postgres:
    image: postgres:latest
    user: root
    environment:
      POSTGRES_HOST: localhost
      POSTGRES_DB: clo_db
      POSTGRES_USER: clo_user
      POSTGRES_PASSWORD: clo_password
    ports:
      - 5432:5432
    expose: 
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.65'
          memory: '1.5GB'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app1:
        condition: service_healthy
      app2:
        condition: service_healthy
    ports:
      - 9999:9999
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.3GB'